CCS PCH C Compiler, Version 4.140, 21898               16-jul-13 10:51

               Filename:   E:\Eletronica\Projetos\Timer\timer.lst

               ROM used:   264 bytes (1%)
                           Largest free fragment is 32500
               RAM used:   27 (2%) at main() level
                           27 (2%) worst case
               Stack:     1 worst case (0 in main + 1 for interrupts)

*
0000:  GOTO   00C2
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... #include<18F252.h> 
.................... //////// Standard Header file for the PIC18F252 device //////////////// 
.................... #device PIC18F252 
.................... #list 
....................  
....................  
.................... #fuses HS 
....................  
.................... #use delay(clock=8MHz) 
.................... //#use rs232(baud=9600, xmit=PIN_C6) 
....................  
.................... #define tempo 14465 
....................  
.................... static long registrador; 
....................  
.................... #INT_TIMER0 
.................... void isr_timer0() { 
.................... 	clear_interrupt(INT_TIMER0); 
00AE:  BCF    FF2.2
.................... 	set_timer0(tempo); 
00B0:  MOVLW  38
00B2:  MOVWF  FD7
00B4:  MOVLW  81
00B6:  MOVWF  FD6
.................... 	output_toggle(PIN_C3); 
00B8:  BCF    F94.3
00BA:  BTG    F8B.3
.................... } 
....................  
00BC:  BCF    FF2.2
00BE:  GOTO   0060
.................... int main(void) { 
00C2:  CLRF   FF8
00C4:  BCF    FD0.7
00C6:  BSF    07.7
00C8:  CLRF   FEA
00CA:  CLRF   FE9
00CC:  BSF    FC1.0
00CE:  BSF    FC1.1
00D0:  BSF    FC1.2
00D2:  BCF    FC1.3
00D4:  CLRF   19
00D6:  CLRF   1A
.................... 	clear_interrupt(INT_TIMER0); 
00D8:  BCF    FF2.2
.................... 	setup_timer_0(T0_DIV_256); 
00DA:  MOVLW  87
00DC:  MOVWF  FD5
.................... 	set_timer0(tempo); 
00DE:  MOVLW  38
00E0:  MOVWF  FD7
00E2:  MOVLW  81
00E4:  MOVWF  FD6
.................... 	enable_interrupts(INT_TIMER0); 
00E6:  BSF    FF2.5
.................... 	enable_interrupts(GLOBAL); 
00E8:  MOVLW  C0
00EA:  IORWF  FF2,F
.................... 	while (TRUE){ 
.................... 		if (registrador != get_timer0()) 
00EC:  MOVF   FD6,W
00EE:  MOVFF  FD7,03
00F2:  SUBWF  19,W
00F4:  BNZ   00FC
00F6:  MOVF   03,W
00F8:  SUBWF  1A,W
00FA:  BZ    0104
.................... 			registrador = get_timer0(); 
00FC:  MOVF   FD6,W
00FE:  MOVWF  19
0100:  MOVFF  FD7,1A
.................... 	} 
0104:  BRA    00EC
.................... 	return 0; 
0106:  MOVLW  00
0108:  MOVWF  01
.................... } 
010A:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
