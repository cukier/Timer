CCS PCH C Compiler, Version 4.124, 63923               18-abr-12 18:24

               Filename: D:\Projetos\Timer\timer.lst

               ROM used: 220 bytes (1%)
                         Largest free fragment is 32544
               RAM used: 25 (2%) at main() level
                         25 (2%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  GOTO   00BA
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  F9D.1
0056:  GOTO   0060
005A:  BTFSC  F9E.1
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... /* 
....................  * timer.c 
....................  * 
....................  *  Created on: 07/11/2011 
....................  *      Author: cuki 
....................  */ 
.................... #include<18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #use delay (clock = 8MHz) 
.................... #INT_TIMER2 
.................... void timer2_isr() { 
.................... 	clear_interrupt(int_timer0); 
00AE:  BCF    FF2.2
.................... 	output_toggle(pin_a0); 
00B0:  BCF    F92.0
00B2:  BTG    F89.0
.................... //	disable_interrupts(int_timer2); 
....................  
.................... } 
....................  
00B4:  BCF    F9E.1
00B6:  GOTO   0060
.................... void main(void) { 
00BA:  CLRF   FF8
00BC:  BCF    FD0.7
00BE:  BSF    07.7
00C0:  CLRF   FEA
00C2:  CLRF   FE9
00C4:  BSF    FC1.0
00C6:  BSF    FC1.1
00C8:  BSF    FC1.2
00CA:  BCF    FC1.3
.................... 	setup_timer_2(T2_DIV_BY_1, 0, 1); 
00CC:  MOVLW  00
00CE:  IORLW  04
00D0:  MOVWF  FCA
00D2:  MOVLW  00
00D4:  MOVWF  FCB
....................  
.................... 	enable_interrupts(int_timer2); 
00D6:  BSF    F9D.1
.................... 	enable_interrupts(global); 
00D8:  MOVLW  C0
00DA:  IORWF  FF2,F
....................  
.................... 	while (true) { 
.................... //		delay_ms(800); 
.................... //		enable_interrupts(int_timer2); 
.................... 	} 
00DC:  BRA    00DC
.................... } 
.................... //#include<18F452.h> 
.................... // 
.................... //int cont = 0; 
.................... // 
.................... //#INT_TIMER2 
.................... //void timer2_isr() { 
.................... //	clear_interrupt(int_timer2); 
.................... //	cont++; 
.................... //	if (cont == 10) { 
.................... //		cont = 0; 
.................... //		output_bit(pin_b0, ~input_state(pin_b0)); 
.................... //	} 
.................... // 
.................... //} 
.................... // 
.................... //void main(void) { 
.................... //	setup_timer_2(T2_DIV_BY_16, 233, 16); 
.................... // 
.................... //	enable_interrupts(int_timer2); 
.................... //	enable_interrupts(global); 
.................... // 
.................... //	while (true) 
.................... //		; 
.................... //} 
....................  
.................... //#include <18F452.h> 
.................... // 
.................... //#use delay(clock=8MHz) 
.................... //#include "lcd_8b.c" 
.................... // 
.................... //float tempo; 
.................... //int t0_overflow; 
.................... // 
.................... //#INT_TIMER0 
.................... //void isr_timer0() { 
.................... //  t0_overflow++; 
.................... //} 
.................... // 
.................... //#INT_TIMER1 
.................... //void isr_timer1() { 
.................... //  output_bit(PIN_C4, ~input(PIN_C4)); 
.................... //} 
.................... // 
.................... //float converteTempo(long leitura) { 
.................... // 
.................... //  return  leitura * 0.000016; 
.................... // 
.................... //} 
.................... // 
.................... //void main(void) { 
.................... // 
.................... //  SETUP_TIMER_0(T0_INTERNAL | T0_DIV_16); 
.................... //  //setup_timer_0(T0_INTERNAL); 
.................... //  //tup_timer_1(T1_DIV_BY_2); 
.................... //  //  setup_timer_1(T1_DIV_BY_2 | T1_INTERNAL); 
.................... // 
.................... //  ENABLE_INTERRUPTS(INT_TIMER0); 
.................... //  //  ENABLE_INTERRUPTS(INT_TIMER1); 
.................... //  ENABLE_INTERRUPTS(GLOBAL); 
.................... // 
.................... //  lcd_init(); 
.................... //  delay_ms(50); 
.................... // 
.................... //  while (true) { 
.................... // 
.................... //    //    if (!t0_overflow) 
.................... //    tempo = converteTempo(get_timer0()); 
.................... // 
.................... //    printf(lcd, "\n%.5f %d", tempo, t0_overflow); 
.................... //    tempo = 0; 
.................... //    t0_overflow = 0; 
.................... //    clear_interrupt(int_timer0); 
.................... //    set_timer0(0); 
.................... //    delay_ms(300); 
.................... //  } 
.................... // 
.................... //} 
00DE:  SLEEP 

Configuration Fuses:
   Word  1: 2700   RC_IO NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
